x-airflow-common: &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  user: "${AIRFLOW_UID:-50000}:0"
  env_file:
    - .env
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__CORE__FERNET_KEY}
    - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
    - AIRFLOW__CORE__LOAD_EXAMPLES=false
    - AIRFLOW__WEBSERVER__SECRET_KEY=mysecret
    - MLFLOW_TRACKING_URI=http://mlflow:5000
    - MLFLOW_DEFAULT_ARTIFACT_ROOT=/opt/airflow/mlruns
    - MLFLOW_ARTIFACT_ROOT=/opt/airflow/mlruns
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./configs:/opt/airflow/configs
    - ./data:/opt/airflow/data
    - ./scripts:/opt/airflow/scripts
    - ./mlruns:/opt/airflow/mlruns
  depends_on:
    - postgres

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8082:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8974/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /opt/airflow/logs /opt/airflow/dags /opt/airflow/plugins
        chown -R "${AIRFLOW_UID}:0" /opt/airflow/{logs,dags,plugins}
        airflow db init && \
        airflow users create \
          --username admin \
          --firstname admin \
          --lastname admin \
          --email admin@example.com \
          --role Admin \
          --password admin
    restart: on-failure

  mlflow:
    image: python:3.10
    user: "1000:1000"
    environment:
      - MLFLOW_BACKEND_STORE_URI=sqlite:///mlflow.db
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlruns
      - MLFLOW_ARTIFACT_ROOT=/mlruns
    command: >
      sh -c "pip install mlflow[extras] &&
             mkdir -p /mlruns &&
             chmod 777 /mlruns &&
             mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri sqlite:///mlflow.db --default-artifact-root /mlruns"
    volumes:
      - ./mlruns:/mlruns
      - ./mlflow.db:/mlflow.db
    ports:
      - "5000:5000"

volumes:
  postgres-db-volume:
