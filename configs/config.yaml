# Model Configuration
model:
  name: "accra_transport_demand_predictor"
  version: "1.0.0"
  architecture: "ensemble"  # Changed from "transformer" to "ensemble"
  ensemble_method: "stacking"
  base_models:
    - "random_forest"
    - "xgboost"
    - "lightgbm"
    - "gradient_boosting"
  meta_model: "linear_regression"
  params:
    random_forest:
      n_estimators: 100
      max_depth: 10
      random_state: 42
    xgboost:
      n_estimators: 100
      max_depth: 6
      learning_rate: 0.1
      random_state: 42
    lightgbm:
      n_estimators: 100
      max_depth: 6
      learning_rate: 0.1
      random_state: 42
    gradient_boosting:
      n_estimators: 100
      max_depth: 6
      learning_rate: 0.1
      random_state: 42
  training:
    test_size: 0.2
    validation_split: 0.2
    cross_validation_folds: 5
    early_stopping_patience: 10
    random_state: 42

# Data Paths
data:
  raw_dir: "data/raw"
  processed_dir: "data/processed"
  models_dir: "models"
  train_file: "data/processed/train.parquet"
  val_file: "data/processed/val.parquet"
  test_file: "data/processed/test.parquet"

# Feature Engineering
features:
  categorical_columns:
    - "route_id"
    - "stop_id"
    - "direction_id"
    - "route_type"
    - "agency_id"
    - "service_id"
    - "stop_zone"
    - "time_period"
    - "day_type"  # weekday, weekend, holiday
  numerical_columns:
    - "distance"
    - "speed"
    - "passenger_count"
    - "route_length"
    - "stop_sequence"
    - "stop_lat"
    - "stop_lon"
    - "fare_price"
    - "headway"
    - "vehicle_capacity"
  temporal_columns:
    - "timestamp"
    - "day_of_week"
    - "hour_of_day"
    - "minute_of_hour"
    - "time_of_day"
    - "is_peak_hour"
    - "is_weekend"
    - "is_holiday"
  derived_features:
    - "demand_density"
    - "route_popularity"
    - "stop_importance"
    - "time_efficiency"
    - "capacity_utilization"
    - "historical_demand_avg"
    - "seasonal_factor"
    - "weather_impact"

# Model Artifacts
artifacts:
  model_dir: "models"
  current_model: "models/current"
  archive_dir: "models/archive"
  mlflow:
    tracking_uri: "http://localhost:5000"
    experiment_name: "accra_transport_optimization"
    model_name: "accra_transport_demand_predictor"
    registry_uri: "http://localhost:5000"

# API Configuration
api:
  host: "0.0.0.0"
  port: 8000
  workers: 4
  timeout: 30
  cors_origins: ["*"]
  rate_limit: 100
  debug: false

# Monitoring
monitoring:
  enable_metrics: true
  prometheus_port: 9090
  grafana_port: 3000
  log_level: "INFO"
  performance_threshold:
    latency_ms: 100
    error_rate: 0.01
  enable_prometheus: true
  health_check_interval: 30  # seconds

# A/B Testing
ab_testing:
  enabled: true
  traffic_split:
    control: 0.5
    treatment: 0.5
  minimum_sample_size: 1000
  significance_level: 0.05

# Model Evaluation
evaluation:
  metrics:
    - "mae"
    - "rmse"
    - "r2"
    - "mape"
    - "smape"
  threshold:
    mae: 5.0
    rmse: 7.0
    r2: 0.8
    mape: 15.0
    smape: 12.0

# Rollback Configuration
rollback:
  enable_auto_rollback: true
  performance_window: "1h"
  error_threshold: 0.05
  latency_threshold: 200

# MLflow Tracking
mlflow:
  tracking_uri: "http://localhost:5000"
  registry_uri: "http://localhost:5000"
  experiment_name: "accra_transport_optimization"
  model_name: "accra_transport_demand_predictor"
  tags:
    environment: "development"
    team: "ml-engineering"
    project: "accra_transport"
    city: "accra"
    country: "ghana"

# Security
security:
  api_key_required: true
  ssl_enabled: true
  rate_limiting: true
  max_requests_per_minute: 100

# Route optimization settings
route_optimization:
  vehicle_capacity: 100
  max_route_time: 120  # minutes
  include_demand_estimation: true
  distance_calculation_method: "haversine"
  optimization_timeout: 300  # seconds
  average_speed_kmh: 30.0
  optimization_algorithm: "or_tools_vrp"
  constraints:
    max_route_distance: 50  # km
    min_route_distance: 1   # km
    max_stops_per_route: 50
    min_stops_per_route: 2
    max_travel_time: 120    # minutes
    min_travel_time: 5      # minutes

# Schedule optimization settings
schedule_optimization:
  vehicle_capacity: 100
  min_headway: 5  # minutes
  max_headway: 30  # minutes
  max_fleet_size: 50
  optimization_algorithm: "pulp_linear_programming"
  service_hours:
    start: 6  # 6 AM
    end: 22   # 10 PM
  time_periods:
    - "morning_peak"
    - "midday"
    - "afternoon_peak"
    - "evening"
    - "night"
  demand_based_headway: true
  cost_optimization: true

# Demand prediction settings
demand_prediction:
  models:
    - "random_forest"
    - "xgboost"
    - "lightgbm"
    - "gradient_boosting"
  ensemble_method: "stacking"
  test_size: 0.2
  random_state: 42
  cross_validation_folds: 5
  feature_selection: true
  hyperparameter_tuning: true
  feature_columns:
    # Time-based features
    - "hour"
    - "minute"
    - "time_of_day"
    - "time_period"
    - "day_of_week"
    - "is_peak_hour"
    - "is_weekend"
    - "is_holiday"
    # Route features
    - "route_type_encoded"
    - "route_length"
    - "route_popularity"
    - "headway"
    - "fare_price"
    # Stop features
    - "stop_sequence"
    - "stop_lat"
    - "stop_lon"
    - "stop_importance"
    - "stop_zone"
    # Demand features
    - "historical_demand_avg"
    - "demand_density"
    - "capacity_utilization"
    - "seasonal_factor"
    # Environmental features
    - "weather_condition"
    - "temperature"
    - "precipitation"
    - "special_events"

# Visualization settings
visualization:
  map_center: [5.5600, -0.2057]  # Accra coordinates
  zoom_level: 11
  map_tiles: "OpenStreetMap"
  colors:
    major_stops: "red"
    medium_stops: "orange"
    regular_stops: "blue"
    high_demand: "darkred"
    medium_demand: "orange"
    low_demand: "lightblue"
  chart_width: 1000
  chart_height: 600
  interactive_features: true
  real_time_updates: true

# GTFS processing settings
gtfs:
  required_files:
    - "agency.txt"
    - "routes.txt"
    - "stops.txt"
    - "trips.txt"
    - "stop_times.txt"
    - "calendar.txt"
  optional_files:
    - "shapes.txt"
    - "fare_attributes.txt"
    - "fare_rules.txt"
  time_format: "%H:%M:%S"
  date_format: "%Y%m%d"
  validation:
    check_relationships: true
    validate_coordinates: true
    check_time_consistency: true

# Optimization constraints
constraints:
  max_route_distance: 50  # km
  min_route_distance: 1   # km
  max_stops_per_route: 50
  min_stops_per_route: 2
  max_travel_time: 120    # minutes
  min_travel_time: 5      # minutes
  max_waiting_time: 15    # minutes
  min_headway: 3          # minutes
  max_headway: 60         # minutes

# Performance targets
targets:
  route_efficiency_improvement: 20  # percentage
  fleet_utilization_rate: 80        # percentage
  demand_prediction_accuracy: 85    # percentage
  schedule_optimization_time: 300   # seconds
  api_response_time: 2              # seconds
  prediction_accuracy_mae: 5.0      # passengers
  prediction_accuracy_r2: 0.85      # R-squared
  optimization_success_rate: 95     # percentage
